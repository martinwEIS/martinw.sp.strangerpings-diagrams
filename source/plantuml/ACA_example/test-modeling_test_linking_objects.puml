@startuml

!include <material/account.puml>

' left to right direction
skinparam maxMessageSize 60
hide stereotype
hide header
' skinparam roundCorner 70
skinparam Shadowing false

skinparam rectangle {
    roundCorner 70
    Shadowing false
    borderColor white
    BackgroundColor<<perc>> lightgrey
    fontcolor<<perc>> black
    BackgroundColor<<victim>> application
    fontcolor<<victim>> navy

}

skinparam card {
    BackgroundColor white
    borderColor lightgrey
    roundCorner 70
}

title Dialog Chat Style

actor "actor A" as actorA
actor "actor B" as actorB

card "Dialog **TODO : Look for new icons" as boarder {

    rectangle " " as diagBoxA {
        rectangle rectdiag1 <<victim>> as "
        <color:blue><size:18><&person></size></color>
        __victim__
        1 This is the first testa
        To see if this will work
        <size:18><&arrow-circle-right></size>
        "
        rectangle rectdiag2 <<victim>> as "
        <color:blue><size:18><&person>\t<&arrow-circle-right></size></color>
        __
        2 This is the first test
        To see if this will work
        "
    }

    rectangle " " as diagBoxB {
        rectangle rectdiag1b <<perc>> as "
        <color:black><size:18><&person></size></color>
        __victimizer__
        1b This is the first test
        To see if this will work
        <size:18><&arrow-circle-left></size>
        "
        rectangle rectdiag2b <<perc>> as "
        <color:black><size:18><&person>\t<&arrow-circle-left></size></color>
        __victimizer__
        2b This is the first test
        To see if this will work
        what if I add more works
        what will happen
        "
    }
}
    note top of actorA
    Victim :
    * Senses Agitation
    * Fear == Chaos
    * Chaos == Unsafe
    * Control == Safe
    * 'The Control' == Manipulation
    end note

    note top of actorB
    Victim :
    * Senses Agitation
    * Fear == Chaos
    * Chaos == Unsafe
    * Control == Safe
    * 'The Control' == Manipulation
    end note

actorA -right-> rectdiag1
actorB -left-> rectdiag1b

rectdiag1 --down-> rectdiag2 #line:white
rectdiag1b --down-> rectdiag2b #line:white

' Convo Flow
rectdiag1 -down-> rectdiag1b #line:white
rectdiag1b -down-> rectdiag2 #line:white
rectdiag2 -down-> rectdiag2b #line:white

' rectdiag1 ----right----> rectdiag1B : manipulation delivered\t
' rectdiag1B ----left----> rectdiag1 : insult-or-injury response\t

' rectdiag2 --right--> rectdiag2B : manipulation delivered\t
' rectdiag2B --left--> rectdiag2 :insult-or-injury response\t




' =======================================



' actor1 -right-> dialog1
' dialog1b <-right- actor2

' Link Dialogs

' dialog1 -down-> dialog2
' dialog2 -down-> dialog3
' dialog3 -down-> dialog4

' dialog1 -down-> respbox2
' ' respbox1 -down-> dialog2
' respbox2 -down->respbox3
' respbox3 -down->respbox4

' dialog1b -down-> dialog2b
' dialog2b -down-> dialog3b
' dialog3b -down-> dialog4b

' respbox1b -down->respbox2b
' respbox2b -down->respbox3b
' respbox3b -down->respbox4b

' Convo Flow
' dialog1 ----right----> dialog1b : This is a test for looping
' dialog1b ----left----> dialog1 : this is another test

' dialog2 ----right----> dialog2b : This is a test
' dialog2b ----left----> dialog2 : this is another test

' dialog3 ---> dialog3b
' dialog3b ---> dialog3

' dialog4 ---> dialog4b
' dialog4b ---> dialog4


@enduml