@startuml

' left to right direction
skinparam Shadowing false
skinparam maxMessageSize 60
' skinparam packageStyle rectangle

skinparam package {
    BorderColor white
    ' BackgroundColor white
}

' <style>
' usecase {
'     HorizontalAlignment right
'     MaximumWidth 20
' }
' package {
'     BackGroundColor #12bdb9
'     LineThickness 1
'     LineColor black
' }
' </style>

skinparam rectangle{
    BorderColor white
    RectangleBorderThickness -1
}

title Victim and Type II Rescuer (Persecutor)

legend bottom left
    ' * TBD1 = <color:#ADBBD2>**BLUE**</color>
    ' * TBD2 = <color:#FFFFFF>**WHITE**</color>
    * Victim = <color:#LemonChiffon>**YELLOW**</color>
    * Type II Rescuer = <color:#A4CCAC>**GREEN**</color>
    * Victimizer/Persecutor = <color:#F7ABAB>**RED**</color>
end legend

' package dosingtrans as "
' Dissociative Dosing Transaction
' --
' Succesful dosing tranaction
' Percecutor 'insult or injury' <-exchange-> 'insult or injury' Victim
' * Both 'Players' in the game
' DISSOCIATE:
' -- more absent than present (unconscious - stupedied)
' -- more there then (regressed)
' -- less here now (present)
' "

' package dissociated as "
' Bodily Symptoms
' of Dissociation or Dissociated
' ..
' Hypoxic ==
' Hypercarbic ==
' Hypoglycemic ==

' "

' dosingtrans -down-> dissociated

' actor "Victim" as vic
' actor "Rescuer" as rescuer

' rectangle "Type II Rescuer\nPersonas" as T2Resc {
'     actor :Rescuer\n(Type II) : as rescue2 #palegreen;line:green;line.bold;text:green

'     actor/ :  Victimizer\n(Persecutor): as vicper #DarkRed;line:red;line.bold;text:red

'     rescue2 -down- vicper

' }

' rescuer -right-> rescue2
' rescuer -right-> vicper

' vic --> rescue2
' vic -down-> vicper

' vicper -down-> dosingtrans


    card theTrigger #white;line:black;text:blue as "
        <b>GIVEN:</b> Rescuer is visibly agitated
        <b>WHEN:</b> Resucer looks for attention
                    to escape uncomfortablility
            <b>AND:</b> Starts <b>'moving furniture'</b>
                    around hap-hazardly
        <b>THEN:</b> Victim becomes Triggered
        "
    ' rectangle "test" as test {
    '     actor "Victim" as victim3  << Hypervigilant >>
    ' }
    rectangle "Rescuer\n(Type II)" as test2 {
        actor "Rescuer" as rescue3 << Agitated >>
    }

    usecase "Start" as start2 #palegreen;line:green;line.bold
    usecase "Dissociative Dosing Transaction\nCOMPLETE" as doseComplete

    start2 -> rescue3
    ' theTrigger -down-> victim3
    rescue3 -right-> theTrigger
    ' theTrigger -right-> victim3
    ' victim3 -right-> vicDiagBox
    ' vicStgHold -right-> resSiegeEngine
    ' victim3 -down-|> start2
    ' rescue3 -down-|> start2


' ======= RESCUER =========
rectangle "Rescuer \n(The Siege Engine)" as resSiegeEngine {
    ' actor "Rescuer" as rescue3 << Agitated >>


    ' usecase "Start" as start2 #palegreen;line:green;line.bold
    ' start2 -left-> rescue3



    rectangle "Dialogs" as resDiag {

        actor/ :  Victimizer\n(Persecutor): as vicper #DarkRed;line:red;line.bold;text:red

        usecase "Why would you\n EVER\n ask me that!" as dialog2
        usecase "This behavior\n of yours\n is trigger me!" as dialog4
        usecase "SIGHHHH..\nYour remind me\nof your sister Andrea\n (rolling eyes)" as dialog6

        dialog2 -down-|> dialog4 #line:white
        dialog4 -down-|> dialog6 #line:white

    }

    note top of vicper
    Rescuer :
    * Victim Conditions NOT
     met & emerges the:
    * 'Vicimizer'
    end note


}


' ======= VICTIM =========
rectangle "Victim \n(The Stronghold)" as vicStgHold {
    ' actor "Victim" as victim3  << Hypervigilant >>


    rectangle "Dialogs" as vicDiagBox {
        actor/ :  Victim: as vicDiag << Hypervigilant >> #palegreen;line:green;line.bold;text:green

        usecase "#1\n Can 'WE' move\n the furniture?" as dialog1
        usecase "I..I....you are right...." as dialog3
        usecase "I'm sorry, I'll isolate\n in my room" as dialog5

        dialog1 -[#green,plain,thickness=4]down-|> dialog3 : counter response #1
        dialog3 -down-|> dialog5 #line:green : counter response #2

    }

    note top of vicDiag
    Victim :
    * Senses Agitation
    * Fear == Chaos
    * Chaos == Unsafe
    * Control == Safe
    * 'The Control' == Manipulation
    end note
}



    ' **This line below is required to keep Dialog boxes lined up
    vicStgHold -right- resSiegeEngine #line:white

    theTrigger -right-> vicDiag
    vicDiag -right-> dialog1
    ' rescue3 --> dialog2 #line:white
    ' dialog1 -> vicper : 'Innocent' ask
    dialog2 <-right- vicper

    dialog1 -[#green,plain,thickness=8]|> dialog2 #text:green : manipulation delivered\n
    dialog2 ---[#DarkRed,dashed,thickness=8]---|> dialog1 #text:red  : insult-or-injury response\n
    ' dialog2 --> dialog3 : annoyed response
    dialog3 -[#green,plain,thickness=8]-|> dialog4 #text:green : manipulation delivered\t
    dialog4 -[#DarkRed,dashed,thickness=8]-|> dialog3 #text:Red : insult-or-injury response\t


    ' dialog4 --> dialog5 : response
    dialog5 -[#green,plain,thickness=8]-|> dialog6 #text:Green : manipulation delivered\t
    dialog6 -[#DarkRed,dashed,thickness=8]-|> dialog5 #text:Red  : insult-or-injury response\t


    dialog5 -down-|> doseComplete #palegreen;line:green;line.bold;text:green



@enduml