@startuml

!include <material/account.puml>
' left to right direction
skinparam maxMessageSize 60
hide stereotype
hide header
' skinparam roundCorner 70
skinparam Shadowing false

skinparam rectangle {
    roundCorner 70
    Shadowing false
    borderColor white
    BackgroundColor<<perc>> lightgrey
    fontcolor<<perc>> black
    BackgroundColor<<victim>> application
    fontcolor<<victim>> navy
    fontStyle<<victim>> segoeui
}

skinparam card {
    BackgroundColor white
    borderColor darkgrey
    borderThickness 10
    roundCorner 70
    fontStyle roboto
}

skinparam note {
    BackgroundColor lightgrey
    borderColor darkgrey
}

title Dialog Chat Style

actor "actor A" as actorA
actor "actor B" as actorB

card "Dialog **TODO :\n Look for new icons\nfont styles" as boarder {

    rectangle " " as diagBoxA {
        rectangle rectdiag1 <<victim>> as "
        <color:blue><size:25><&person></size></color>

        1b This is the first testa
        To see if this will work
        but that will work too

        <size:25><&arrow-circle-right></size>
        "
        rectangle rectdiag2 <<victim>> as "
        <color:blue><size:25><&person></size></color>

        2 This is the first test
        To see if this will work but
         that will work too

        <size:25><&arrow-circle-right></size>
        "
    }

    rectangle " " as diagBoxB {
        rectangle rectdiag1b <<perc>> as "
        <color:black><size:25><&person></size></color>

        1b This is the first test
        To see if this will work

        <size:25><&arrow-circle-left></size>
        "
        rectangle rectdiag2b <<perc>> as "
        <color:black><size:25><&person></size></color>

        2b This is the first test
        To see if this will work
        what if I add more works
        what will happen

        <size:25><&arrow-circle-left></size>
        "
    }
}
    note left of actorA
    Victim :
    * Senses Agitation
    * Fear == Chaos
    * Chaos == Unsafe
    * Control == Safe
    * 'The Control' == Manipulation
    end note

    note top of actorB
    Victim :
    * Senses Agitation
    * Fear == Chaos
    * Chaos == Unsafe
    * Control == Safe
    * 'The Control' == Manipulation
    end note

actorA -right-> rectdiag1 #line:black
actorB -left-> rectdiag1b #line:black

rectdiag1 --down-> rectdiag2 #line:white
rectdiag1b --down-> rectdiag2b #line:white

' Convo Flow
rectdiag1 -down-> rectdiag1b #line:lightgrey : The manipulation\nbegins
rectdiag1b -down-> rectdiag2 #line:white
rectdiag2 -down-> rectdiag2b #line:white

' =======================================

card theTrigger <<GWT>> as "
    <b>GIVEN:</b> Rescuer is visibly agitated
    <b>WHEN:</b> Resucer looks for attention
                to escape uncomfortablility
        <b>AND:</b> Starts <b>'moving furniture'</b>
                around hap-hazardly
    <b>THEN:</b> Victim becomes Triggered
    "

    rectangle "Rescuer\n(Type II)" <<rescuer>> as rectRescSetup {
        actor "Rescuer" as rescuer << Agitated >>
    }

    usecase "Start" as start #palegreen;line:green;line.bold
    usecase "Dissociative Dosing Transaction\nCOMPLETE" as doseComplete

    start -> rescuer
    rescuer -right-> theTrigger




@enduml