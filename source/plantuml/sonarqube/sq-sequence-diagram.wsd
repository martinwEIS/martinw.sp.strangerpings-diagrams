@startuml

'hide footbox
skinparam ParticipantPadding 50
skinparam BoxPadding 20

skinparam roundcorner 20
skinparam backgroundColor #EEEBDC

skinparam sequence {
	ArrowColor #0e477d
	ActorBorderColor DeepSkyBlue
	LifeLineBorderColor blue
	LifeLineBackgroundColor #A9DCDF

    GroupBackgroundColor White
    GroupBodyBackgroundColor LightBlue
    GroupBorderColor Blue

	ParticipantBorderColor LightSteelBlue
	ParticipantBackgroundColor Gray
	ParticipantFontSize 17
	ParticipantFontColor White
}

    header SonarQube Deployment Sequence Diagram.wsd
    footer Page %page% of %lastpage%

    title SonarQube Deployment Sequence Diagram

    actor "engineer" as engineer
    participant "'Snowflake' Jenkins" as jenkins
    participant "Pipeline Library" as pipeline_lib
    participant "SSM" as ssm
    participant "CloudFormation" as cloudform
    participant "ENI" as eni
    database "RDS Instance (PostGreSQL)" as rdsinstance
    participant "ASG" as asg
    entity "AMI" as ami
    participant "EC2" as ec2
    participant "ALB" as alb
    participant "Route53" as route53

== Deploy : Initial Deployment of SonarQube to EIS-PlatformLive Legacy Account ==
    group  SonarQube Datacenter Edition Deployment
        jenkins -> pipeline_lib : Deploy SonarQube into <b>EIS-PlatformLive Account</b>
        pipeline_lib -> ssm++
            rnote right of pipeline_lib #fc8c03
                * Get username/password
                  to be used in Cloudformation
            end note
        pipeline_lib <-- ssm--
        pipeline_lib -> cloudform++
            rnote right of pipeline_lib #fc8c03
                <b>Pipeline Library:</b>
                * Using <b>sonarstackwaitcreation</b> branch 
                  of <b>platform.infrastructure.pipelinelibrary repository</b>
                * This is a library that includes helper 
                  functions to deploy applications
                  through the Snowflake Jenkins
            end note
        cloudform -> eni++
            rnote right of eni #fc8c03
                <b>Deploy Elastic Network Interfaces (ENIs) </b>
                * Each autoscaling group needs one to 
                associate to in order to have static IPs with autoscaling
                * Each ec2 instance requires its own ASG, tied
                 to its own individual <b>Elastic Network Interface (ENI)</b>
            end note
        cloudform <-- eni--
        cloudform -> rdsinstance++
            rnote right of rdsinstance #fc8c03
                <b>AWS RDS :</b> RDS PostGre Instance
                * <b>Instance : sq-rds-db-instance </b>              
            end note
        cloudform <-- rdsinstance--
        cloudform -> asg++
            rnote right of asg #fc8c03
                <b>Deploy autoScaling groups (ASG) for each individual</b>
                <b>SonarQube ec2 instance:</b>
                * Two asg's that comprise application 
                instances (front end of SonarQube)
                * Three asg's that comprise search instances
                 (a small, 3 node Elasticsearch cluster)
            end note
        asg -> ami++
            rnote right of ami #fc8c03
                <b>Get AMI ID</b>
                * AMI is generated by Packer build process that and is hardcoded
            end note
        asg <-- ami--        
        asg -> ec2++
            rnote right of ec2 #fc8c03
                <b>Deploy SonarQube instances:</b>
                * Two ec2's that comprise application instances (front end of SonarQube)
                * Three ec2's that comprise search instances (a small, 3 node Elasticsearch cluster)
            end note
        asg <-- ec2--
        cloudform <-- asg--
        cloudform -> alb++
            rnote right of alb #fc8c03
                <b>Create routing rules for the ALB:</b>
                * Port: 9090 SonarQube default application port
                * Port: 9090 Forward to Port: 80
                * Port: 9090 Forward to Port 443
            end note
        cloudform <- alb--
        cloudform -> route53++
            rnote right of route53 #fc8c03
                * Create DNS A record:
                 <b>sonarqube.eis-platformlive.cloud</b>
            end note
        cloudform <-- route53--
        pipeline_lib <-- cloudform--
        jenkins <-- pipeline_lib : Return deployment status
    end

@enduml
