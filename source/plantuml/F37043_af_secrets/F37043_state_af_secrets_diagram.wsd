' 
' reference       : http://plantuml.com/state-diagram
' skinparam       : http://plantuml.com/skinparam
' common commands : http://plantuml.com/commons
' color codes     : http://plantuml.com/color
' arror direction : http://plantuml.com/component-diagram
' notes           : http://plantuml.com/state-diagram
'--------------------------------------
@startuml
hide empty description
'scale 900 width
'scale max 1024 width

'---- Title Format Settings ----
skinparam titleBorderRoundCorner 15
skinparam titleBorderThickness 3
skinparam titleBorderColor DimGray
skinparam titleBackgroundColor business
skinparam titleFontSize 25

'---- Object Format Settings ----
skinparam state {
  StartColor MediumBlue
  EndColor Red
  BorderColor Gray
  BackgroundColor<<onprem_bkgd>> YellowGreen/White
  BackgroundColor<<cdf-pipeline_bkgd>> YellowGreen/White
  BackgroundColor<<cdf_bkgd>> darkorange
  BackgroundColor<<jenkins_bkgd>> LightSteelBlue
  BackgroundColor<<aws_bkgd>> LightSteelBlue
  BackgroundColor<<manifest_bkgd>> #CadetBlue/White
  BackgroundColor<<P9_bkgd>> #Gray/White
  BackgroundColor<<pyorc_bkgd>> #SteelBlue/White
  'FontName Aapex 

}

title F37043 : AF Secrets - Component Diagram

state "AWS-LZ" as awslz <<aws_bkgd>>  {

    state "Parameter_Store" as ps {
        ps : # shared_account
        ps : # RSA Key by ADE/Service
        ps : ## {"secrets_encryption_key": "AQICAHjum...."}
    }    
}

state "On-Prem" as onprem <<onprem_bkgd>> {
    
    state "CDF" as cdf <<cdf_bkgd>> {
        state "PyOrc" as pyorc <<pyorc_bkgd>> {
            state "User_Data.yaml" as pyo_udata
            state "MAI" as mai

            pyorc --> pyo_udata
            pyo_udata -left-> mai
        }

        state "cdf-pipeline library" as cdflib <<cdf-pipeline_bkgd>> {
            cdflib : # Step : create RSA Key
            cdflib : # Step : encrypt/decrypt
            cdflib : # Step : (update) downloadManifest
            cdflib : \t NOTE : used by CD workflow
        }

        state "ci-pipeline library" as cilib <<cdf-pipeline_bkgd>> {
            cilib : # Step : (update) maiTest
            cilib : \t NOTE : used by CI workflow
        }
    }
    
    state "af-jenkins" as afjenkins <<jenkins_bkgd>> {

        state "UI : Dev Secrets" as uidev {
            uidev : 1. Create RSA keys
            uidev : 1. Encrypt Secrets
            uidev : 2. PR to EnvironmentManifest
        }
    }
    
    state "stash" as stsh <<manifest_bkgd>> {
        state "ApplicationConfigurationLibrary" as ACL_stsh{
            ACL_stsh : - Nuget Package
        }
        state "environmentmanifest" as envmfst_stsh
            envmfst_stsh :  - environment/ADE
    }

    state "consul" as consul
        consul : * Encrypted Secret

    state "artifactory" as artifact

    state "P9 VM" as p9 <<P9_bkgd>> {
        state ".NET_App" as net{
            state "consul template" as contemp
            state "AppConfigLibrary" as ACL_nuget
            state "ELF" as priv_key
                priv_key: c:\mai\environment.json
                priv_key: [{"secrets_encryption_key": "AJOENRN33433432..."}]

            ACL_nuget --> contemp
            ACL_nuget --> priv_key
            ACL_nuget -up-> net
        }
    }

    contemp --> consul
    uidev --> envmfst_stsh
    envmfst_stsh --> consul
    ACL_stsh --> artifact
    mai --> priv_key
    cdflib --> uidev
    uidev --> cdflib
    cdflib -right-> pyorc
    cilib -up-> pyorc
}

uidev --> ps
pyorc --> ps

@enduml